package edu.temple.quietLounge.DAO;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import edu.temple.quietLounge.SQLDatabaseConnection;
import edu.temple.quietLounge.VO.Lounge;

/**
 * 
 * This class is how the application retrieves and stores all the lounge data. The
 * class extends the ArrayList class and adds the ability to query the database. 
 * All the information about the lounges can be accessed through itself
 *
 */
public class TrackedLoungeData extends ArrayList<Lounge>{
	
	// Constants
	private static final long serialVersionUID = 1L;
	private final int DEFAULT_MAX = 50;
	
	@SuppressWarnings("unused")	
	private int maxLounges;
	// TODO Implement To Get Max Number of Lounges in Response
	
	/**
	 * Default No-arg Constructor
	 */
	public TrackedLoungeData() {
		this.maxLounges = this.DEFAULT_MAX;
		pullAllLoungeCoords();
	}
	
	/**
	 * DO NOT USE - not currently implemented
	 * @param maxLounges - Max number of lounges to retrieve from DB
	 */
	public TrackedLoungeData(int maxLounges) {
		this.maxLounges = maxLounges;
		pullAllLoungeCoords();
	}
	
	/**
	 * The method connects to the DB and uses the SELECT query generated by 
	 * the SQLQueryStringFactory class to get the lounge data. The method
	 * then places all the data into a Lounge class and inserts them into
	 * itself
	 */
	private void pullAllLoungeCoords() {
		
		// Variables
		Statement stmt;						// The query statement to send to DB
		ResultSet rs;						// Results from query
		Connection con;						// Connection to DB
		SqlQueryStringFactory queryFactory;	// Creates query strings
		
		// Get Database Connection
		con = SQLDatabaseConnection.getCon();
				
		// Create Query factory 
		queryFactory = new SqlQueryStringFactory();	
		
		// Run Query
		try {
			
			// Get master lounge table data
			stmt = con.createStatement();
			rs = stmt.executeQuery(queryFactory.getSelectAllLoungeDataQuery());
			
			// Add query results to the ArrayList (this)
			while(rs.next()) {
				this.add(createLounge(rs));
			}
			
		} catch (SQLException e) {
			e.printStackTrace();
		}
				
	}
	
	/**
	 * Attempts to create a lounge object from a single row retrieved by the DB query
	 * @param rs - A row of a query
	 * @return A new lounge object filled with the data from the ResultSet rs
	 * @throws SQLException 
	 */
	private Lounge createLounge(ResultSet rs) throws SQLException {
		return new Lounge(rs.getInt(1), rs.getString(2), rs.getDouble(3), rs.getDouble(4), rs.getDouble(5), rs.getInt(6));
	}
	
	/**
	 * Shows all the data that has be inserted into itself
	 */
	@Override
	public String toString() {
		return "LoungeCoordinates [loungeDataList=" + this.toString() + "]";
	}

}
